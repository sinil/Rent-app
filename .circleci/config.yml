## Setup adapted from:
## https://medium.com/pink-room-club/android-continuous-integration-using-fastlane-and-circleci-2-0-part-i-7204e2e7b8b
## https://medium.com/pink-room-club/android-continuous-integration-using-fastlane-and-circleci-2-0-part-ii-7f8dd7265659
## https://medium.com/pink-room-club/android-continuous-integration-using-fastlane-and-circleci-2-0-part-iii-ccdf5b83d8f5

version: 2
references:
  ## Workspaces
  workspace: &workspace
    ~/src

  ## Docker image configurations
  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-29
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

  ## Cache
  gradle_key: &gradle_key
    jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

  gems_key: &gems_key
    gems-{{ checksum "Gemfile.lock" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: *gems_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle
        - ~/.m2

  save_gems_cache: &save_gems_cache
    save_cache:
      key: *gems_key
      paths:
        - vendor/bundle



  ## Dependencies
  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: bundle check || bundle install --path vendor/bundle

  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies

  decode_android_key: &decode_android_key
      run:
        name: Decode Android key store
        command: echo $KEYSTORE | base64 -d | tee keystore.jks app/keystore.jks >/dev/null

jobs:
  ## Run unit tests
  test_unit:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - *save_gems_cache
      - run:
          name: Run unit tests
          command: bundle exec fastlane test
      - store_artifacts:
          path: app/build/reports
          destination: /reports
      - store_artifacts:
          path: app/build/test-results
          destination: /test-results
      - store_test_results:
          path: app/build/test-results

  ## Deploy Riwal Rental to Firebase distribution
  deploy_riwal_to_firebase_distribution:
    <<: *android_config
    steps:
    - checkout
    - run:
          command: gem update --system  && gem install bundler &&  bundle update fastlane && bundle install
          name: configure build
    - *decode_android_key
    - run:
          name: "Install Firebase CLI"
          command: |
            curl -sL firebase.tools | bash
    - run:
          name: Copy google-services.json
          command: echo ${SUPPLY_JSON_KEY_DATA_BASE64} | base64 --decode > app/google-services.json
    - run:
          name: Deploy Riwal Rental to Firebase distribution
          command: bundle exec fastlane deploy_riwal_rental_to_firebase_distribution flavor:acceptanceRiwal branch:${CIRCLE_BRANCH} app_id:$FIREBASE_APP_ID_ACCEPTANCE_RIWAL firebase_token:$FIREBASE_TOKEN
    - store_artifacts:
          path: app/build/outputs/apk
          destination: apks

  ## Deploy Manlift Rental to Firebase distribution
  deploy_manlift_to_firebase_distribution:
    <<: *android_config
    steps:
    - checkout
    - run:
          command: gem update --system  && gem install bundler &&  bundle update fastlane && bundle install
          name: configure build
    - *decode_android_key
    - run:
          name: "Install Firebase CLI"
          command: |
            curl -sL firebase.tools | bash
    - run:
          name: Copy google-services.json
          command: echo ${SUPPLY_JSON_KEY_DATA_BASE64_MANLIFT} | base64 --decode > app/google-services.json
    - run:
          name: Deploy Manlift Rental to Fribase distribution
          command: bundle exec fastlane deploy_manlift_rental_to_firebase_distribution flavor:acceptanceManlift branch:${CIRCLE_BRANCH} app_id:$FIREBASE_APP_ID_ACCEPTANCE_MANLIFT firebase_token:$FIREBASE_TOKEN
    - store_artifacts:
          path: app/build/outputs/apk
          destination: apks

  ## Upload Riwal Rental APK to Play Store
  deploy_riwal_rental_to_play_store:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - *save_gems_cache
      - run:
          name: Upload Riwal Rental APK to Play Store
          command: bundle exec fastlane deploy_riwal_rental_to_play_store
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/
      - store_artifacts:
          path: app/build/outputs/mapping/
          destination: /mapping/

  ## Upload Manlift Rental APK to Play Store
  deploy_manlift_rental_to_play_store:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - *save_gems_cache
      - run:
          name: Upload Manlift Rental APK to Play Store
          command: bundle exec fastlane deploy_manlift_rental_to_play_store
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/
      - store_artifacts:
          path: app/build/outputs/mapping/
          destination: /mapping/


workflows:
  version: 2
  workflow:
    jobs:
      - test_unit
      - deploy_riwal_to_firebase_distribution:
          filters:
            branches:
              only:
              - develop
          requires:
            - test_unit
      - deploy_manlift_to_firebase_distribution:
          filters:
            branches:
              only:
              - develop
          requires:
            - test_unit
      - deploy_riwal_rental_to_play_store:
          filters:
            branches:
              only:
                - master
          requires:
            - test_unit
      - deploy_manlift_rental_to_play_store:
          filters:
            branches:
              only:
              - master
          requires:
            - test_unit
